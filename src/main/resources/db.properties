# MySql DB properties
dataSourceClassName=com.mysql.cj.jdbc.Driver
ds.jdbcUrl=jdbc:mysql://localhost:3306/mytestdb?serverTimezone=UTC&useSSL=true&useUnicode=yes&characterEncoding=UTF-8
cachePrepStmts=true
useServerPrepStmts=true
useLocalSessionState=true
cacheServerConfiguration=true
elideSetAutoCommits=true
maintainTimeStats=false

# queries
query.find.user.by.user.id=ELECT u.user_id, u.email, u.is_active, u.password, u.user_name, u.person_id, \
  r.role_id, r.role \
  FROM users AS u \
  INNER JOIN roles r ON u.role_id = r.role_id \
  WHERE u.user_id = ?;
query.find.user.by.username=SELECT u.user_id, u.email, u.is_active, u.password, u.user_name, u.person_id, \
  r.role_id, r.role \
  FROM users AS u \
  INNER JOIN roles r ON u.role_id = r.role_id \
  WHERE u.user_name = (?);
query.find.user.by.username.and.password=SELECT u.user_id, u.email, u.is_active, u.password, u.user_name, u.person_id, \
  r.role_id, r.role, p.last_name, p.first_name \
  FROM users AS u \
  INNER JOIN person_data p ON u.person_id = p.person_id \
  INNER JOIN roles r ON u.role_id = r.role_id \
  WHERE u.user_name = ? AND u.is_active = true;
query.delete.from.users.by.id=DELETE FROM users WHERE user_id = ?;
query.create.new.user=INSERT INTO users(email, password, user_name, person_id, role_id) \
  VALUES(?, ?, ?, ?, ?);
query.update.user=UPDATE users \
  SET email = ?, user_name = ?, is_active = ? \
  WHERE user_id = ?;


query.user.find.all=SELECT * from users INNER JOIN roles r on users.role_id = r.role_id;
query.update.user.is.active=UPDATE users SET is_active = ? WHERE user_id = ?;

query.find.person.by.person.id=SELECT person_id, birth_date, first_name, \
  id_number_tax_code, last_name, middle_name, secret_word FROM person_data \
  WHERE person_id = ?;

query.find.data.for.all.users.with.user.role=SELECT u.user_id, u.user_name, u.email, u.is_active, \
  p.person_id, p.last_name, p.first_name, p.middle_name, p.birth_date, \
  f.phone_country_code, f.phone \
  FROM users AS u \
  INNER JOIN person_data p ON u.person_id = p.person_id \
  INNER JOIN phone_number f ON p.person_id = f.person_id \
  INNER JOIN roles r ON u.role_id = r.role_id \
  WHERE r.role = 'USER' \
  AND f.is_primary = true 
query.find.bank.accounts.for.user=SELECT ba.bank_account_id, ba.account_amount, ba.account_type, ba.bank_account_number, \
ba.currency, ba.enable_request, ba.is_active, ba.person_id, \
cc.is_active, cc.credit_card_id, cc.card_name, cc.card_number, cc.expire_date, cc.is_active, cc.owner_name \
FROM bank_accounts AS ba \
INNER JOIN person_data pd on ba.person_id = pd.person_id \
INNER JOIN users u on pd.person_id = u.person_id \
INNER JOIN credit_card cc on ba.bank_account_id = cc.bank_account_id \
WHERE user_name = ? 
query.find.bank.accounts.for.user.id=SELECT ba.bank_account_id, ba.account_amount, ba.account_type, ba.bank_account_number, \
ba.currency, ba.enable_request, ba.is_active, ba.person_id, \
cc.is_active, cc.credit_card_id, cc.card_name, cc.card_number, cc.expire_date, cc.is_active, cc.owner_name \
FROM bank_accounts AS ba \
INNER JOIN person_data pd on ba.person_id = pd.person_id \
INNER JOIN users u on pd.person_id = u.person_id \
INNER JOIN credit_card cc on ba.bank_account_id = cc.bank_account_id \
WHERE user_id = ? 
query.insert.payment=INSERT INTO payment (payment_amount, to_bank_account, bank_account_id) \
  VALUES (?, ?, ?);
query.insert.payment.with.check.conditions=INSERT INTO payment (payment_amount, to_bank_account, bank_account_id) \
  VALUES (?, (SELECT bank_account_number FROM bank_accounts WHERE bank_account_number = ? AND ba.is_active = true), \
  (SELECT bank_account_id FROM bank_accounts as ba \
  WHERE ba.person_id = ? AND ba.bank_account_number = ? AND ba.is_active = true AND ba.account_amount >= ? \
  and not ba.bank_account_number = ? \
  ) \
);
query.update.payment.with.check.conditions=UPDATE payment as p, bank_accounts as ba, bank_accounts as b \
SET p.is_sent = true, p.payment_date = CURRENT_TIMESTAMP, \
ba.account_amount = ba.account_amount - ?, \
b.account_amount = b.account_amount + ? \
WHERE p.payment_id = ? \
AND ba.bank_account_id = ? and ba.account_amount >= ? and ba.is_active = true and ba.person_id = ? \
AND b.bank_account_number = ? and b.is_active = true;

query.find.bank.account=SELECT * FROM bank_accounts AS ba \
  WHERE ba.bank_account_number = ? ;

query.update.payment=UPDATE payment \
  SET is_sent = true, payment_date = CURRENT_TIMESTAMP \
  WHERE payment_id = ?;

query.find.bank.account.is.active=SELECT ba.is_active FROM bank_accounts AS ba \
  WHERE ba.bank_account_number = ?;

